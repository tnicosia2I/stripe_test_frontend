import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Stripe, loadStripe } from "@stripe/stripe-js";
import axios from "axios";
import { Elements, PaymentElement, useStripe } from "@stripe/react-stripe-js";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [stripe, setStripe] = useState<Stripe | null>();
  // const stripe = new Stripe(
  //   "pk_test_51NoAhsFAIyhheUEa0NWvxXirRSKR5a7n1ILBe9tYGKVWZAutKijzf8LozNwYE7xLjMfS1WgRnwqxFSpYCAJKuUiy00ohs27CYh"
  // );

  async function asyncLoadStripe() {
    const stripe = await loadStripe(
      "pk_test_51NoAhsFAIyhheUEa0NWvxXirRSKR5a7n1ILBe9tYGKVWZAutKijzf8LozNwYE7xLjMfS1WgRnwqxFSpYCAJKuUiy00ohs27CYh"
    );
    setStripe(stripe);
  }

  useEffect(() => {
    asyncLoadStripe();
  }, []);

  async function onButtonClick() {
    if (stripe == null) return;
    const result = await axios.post("http://localhost:3000/create-payment");
    const checkoutSessionId = result.data;
    const { error } = await stripe.redirectToCheckout({
      sessionId: checkoutSessionId,
    });
    if (error) {
      console.error("Error stripe");
    }
  }

  async function sendSubscribe() {
    if (stripe == null) return;
    const result = await axios.post("http://localhost:3000/create-sub");
    const checkoutSessionId = result.data;
    const { error } = await stripe.redirectToCheckout({
      sessionId: checkoutSessionId,
    });
    if (error) {
      console.error("Error stripe");
    }
  }

  async function createProduct() {
    if (stripe == null) return;
    const result = await axios.post("http://localhost:3000/create-product");
    console.log(result.data);
  }

  async function createCustomer() {
    if (stripe == null) return;
    const result = await axios.post("http://localhost:3000/create-customer");
    console.log(result.data);
  }

  async function sendInvoice() {
    await axios.post("http://localhost:3000/create-invoice");
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {stripe && (
        <main className={`${styles.main} ${inter.className}`}>
          <button onClick={() => onButtonClick()}>Clicca</button>
          <button onClick={() => sendInvoice()}>Clicca per fattura</button>
          <button onClick={() => sendSubscribe()}>
            Clicca per abbonamento
          </button>
          <button onClick={() => createCustomer()}>
            Clicca per creare un customer
          </button>
          {/* (
            <Elements
              stripe={stripe}
              options={{
                clientSecret:
                  "pi_3OXjTQFAIyhheUEa2LCQg4Ui_secret_S1AxAOGA7llXHHSygzNwL7nhj",
              }}
            >
              <form id="payment-form">
                <PaymentElement id="payment-element" />
              </form>
            </Elements>
          ) */}
        </main>
      )}
    </>
  );
}
